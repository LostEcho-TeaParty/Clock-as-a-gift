C51 COMPILER V9.56.0.0   LCD                                                               01/31/2018 12:56:25 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include"lcd.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : Lcd1602_Delay1ms
   5          * 函数功能       : 延时函数，延时1ms
   6          * 输    入         : c
   7          * 输    出         : 无
   8          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
   9          *******************************************************************************/
  10          
  11          void Lcd1602_Delay1ms(uint c)   //误差 0us
  12          {
  13   1          uchar a,b;
  14   1        c=c*12;
  15   1        for (; c>0; c--)
  16   1        {
  17   2           for (b=199;b>0;b--)
  18   2           {
  19   3              for(a=1;a>0;a--);
  20   3           }      
  21   2        }
  22   1            
  23   1      }
  24          
  25          /*******************************************************************************
  26          * 函 数 名         : LcdWriteCom
  27          * 函数功能       : 向LCD写入一个字节的命令
  28          * 输    入         : com
  29          * 输    出         : 无
  30          *******************************************************************************/
  31          #ifndef   LCD1602_4PINS  //当没有定义这个LCD1602_4PINS时
              void LcdWriteCom(uchar com)   //写入命令
              {
                LCD1602_E = 0;     //使能
                LCD1602_RS = 0;    //选择发送命令
                LCD1602_RW = 0;    //选择写入
                
                LCD1602_DATAPINS = com;     //放入命令
                Lcd1602_Delay1ms(1);    //等待数据稳定
              
                LCD1602_E = 1;            //写入时序
                Lcd1602_Delay1ms(5);    //保持时间
                LCD1602_E = 0;
              }
              #else 
  46          void LcdWriteCom(uchar com)   //写入命令
  47          {
  48   1        LCD1602_E = 0;   //使能清零
  49   1        LCD1602_RS = 0;  //选择写入命令
  50   1      //  LCD1602_RW = 0;  //选择写入
  51   1      
  52   1        LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
  53   1        Lcd1602_Delay1ms(1);
  54   1      
C51 COMPILER V9.56.0.0   LCD                                                               01/31/2018 12:56:25 PAGE 2   

  55   1        LCD1602_E = 1;   //写入时序
  56   1        Lcd1602_Delay1ms(5);
  57   1        LCD1602_E = 0;
  58   1      
  59   1      //  Lcd1602_Delay1ms(1);
  60   1        LCD1602_DATAPINS = com << 4; //发送低四位
  61   1        Lcd1602_Delay1ms(1);
  62   1      
  63   1        LCD1602_E = 1;   //写入时序
  64   1        Lcd1602_Delay1ms(5);
  65   1        LCD1602_E = 0;
  66   1      }
  67          #endif
  68          /*******************************************************************************
  69          * 函 数 名         : LcdWriteData
  70          * 函数功能       : 向LCD写入一个字节的数据
  71          * 输    入         : dat
  72          * 输    出         : 无
  73          *******************************************************************************/       
  74          #ifndef   LCD1602_4PINS      
              void LcdWriteData(uchar dat)      //写入数据
              {
                LCD1602_E = 0;  //使能清零
                LCD1602_RS = 1; //选择输入数据
                LCD1602_RW = 0; //选择写入
              
                LCD1602_DATAPINS = dat; //写入数据
                Lcd1602_Delay1ms(1);
              
                LCD1602_E = 1;   //写入时序
                Lcd1602_Delay1ms(5);   //保持时间
                LCD1602_E = 0;
              }
              #else
  89          void LcdWriteData(uchar dat)      //写入数据
  90          {
  91   1        LCD1602_E = 0;    //使能清零
  92   1        LCD1602_RS = 1;   //选择写入数据
  93   1      //  LCD1602_RW = 0;   //选择写入
  94   1      
  95   1        LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
  96   1        Lcd1602_Delay1ms(1);
  97   1      
  98   1        LCD1602_E = 1;    //写入时序
  99   1        Lcd1602_Delay1ms(5);
 100   1        LCD1602_E = 0;
 101   1      
 102   1        LCD1602_DATAPINS = dat << 4; //写入低四位
 103   1        Lcd1602_Delay1ms(1);
 104   1      
 105   1        LCD1602_E = 1;    //写入时序
 106   1        Lcd1602_Delay1ms(5);
 107   1        LCD1602_E = 0;
 108   1      }
 109          #endif
 110          /*******************************************************************************
 111          * 函 数 名       : LcdInit()
 112          * 函数功能     : 初始化LCD屏
 113          * 输    入       : 无
 114          * 输    出       : 无
 115          *******************************************************************************/       
 116          #ifndef   LCD1602_4PINS
C51 COMPILER V9.56.0.0   LCD                                                               01/31/2018 12:56:25 PAGE 3   

              void LcdInit()              //LCD初始化子程序
              {
                LcdWriteCom(0x38);  //开显示
                LcdWriteCom(0x0c);  //开显示不显示光标
                LcdWriteCom(0x06);  //写一个指针加1
                LcdWriteCom(0x01);  //清屏
                LcdWriteCom(0x80);  //设置数据指针起点
              }
              #else
 126          void LcdInit()              //LCD初始化子程序
 127          {
 128   1        LcdWriteCom(0x32);   //将8位总线转为4位总线
 129   1        LcdWriteCom(0x28);   //在四位线下的初始化
 130   1        LcdWriteCom(0x0c);  //开显示不显示光标
 131   1        LcdWriteCom(0x06);  //写一个指针加1
 132   1        LcdWriteCom(0x01);  //清屏
 133   1        LcdWriteCom(0x80);  //设置数据指针起点
 134   1      }
 135          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    125    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
